##################################################
# Real Time Linux Configs
##################################################

CONFIG_PREEMPT=y
CONFIG_PREEMPT_RT=y

# max out the kernel's tick
#
# Ideally this is a balance. Increasing this means we
# spend more time in the scheduler deciding what we
# should do and less time on doing it however this
# also minimizes the time spent running a low-priority
# task while a real-time priority task is awake
CONFIG_HZ_1000=y
CONFIG_HZ=1000

# omit scheduling ticks for CPUs with a single task
#
# If a CPU has only one runnable task there is little
# need to contiguously interrupt it as there is no other
# task for it to switch to. This comes at the cost of having
# to offload the CPU's RCU callbacks to another CPU with
# an active tick.
#
# For workloads with many short-lived tasks HZ_PERIODIC may
# be the better selection as adaptive-tick modes does not
# come without tradeoffs. For example the user-to kernel
# transitions are slightly more expensive
CONFIG_NO_HZ_FULL=y
CONFIG_CONTEXT_TRACKING_USER=y

# track our RCU callbacks
#
# there are situations in which idle CPUs cannot enter
# a dynctick or adaptive-tick mode, the most common reason
# being when a CPU has RCU callbacks pending. We can avoid
# this by processing all RCU callbacks in the "rcuo" kthread
# that we can 'boost' to real-time priority to prevent RCU
# stalls in real-time heavy workloads.
CONFIG_RCU_NOCB_CPU=y
CONFIG_RCU_NOCB_CPU_DEFAULT_ALL=y
CONFIG_RCU_NOCB_CPU_CB_BOOST=y

# memory management tuning
#
# The SLUB allocator (default allocator used by the kernel)
# uses per-cpu caches to accelerate allocation and freeing of
# objects local to that processor. This comes at the cost of
# more indeterminism when freeing. Remove this to remove jitter
CONFIG_SLUB_CPU_PARTIAL=n

# RCU system tuning
#
# The scheduler heavily utilizes the RCU subsystem to avoid
# large amounts of locking that would be needed otherwise.
# Removing this is showing to improve the am62x latency numbers
# using stress-ng and cyclictest.
CONFIG_RCU_TRACE=n

# remove have kmemleak support
#
# Even-though the kmemleak detector is disabled, removing it
# completely from the build is showing improvements for the
# am62x latency numbers when monitoring with cyclictest and
# stress-ng to generate a synthetic background load.
CONFIG_HAVE_DEBUG_KMEMLEAK=n

# HACK: speed up event stream timer
#
# More of a TODO for myself... however something is putting
# the CPUs in WFE. Turning this off will increase the
# frequency this timer that takes the CPUs our of WFE.
#
# Ideally this should have a negative effect on our measurements
# as our CPUs are interrupted more often.
CONFIG_ARM_ARCH_TIMER_EVTSTREAM=n

#Disable PM features
CONFIG_CPU_IDLE=n
CONFIG_CPU_FREQ=n
CONFIG_SUSPEND=n
